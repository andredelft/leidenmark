# Creates release if version has changed
name: Check for release

on:
  push:
    branches: [ master ]

jobs:
  check-tags:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Get current version
      id: current
      run: echo "::set-output name=version::v$(python setup.py --version)"
    - uses: mukunku/tag-exists-action@v1.0.0
      id: existing_tag
      with:
        tag: ${{ steps.current.outputs.version }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - uses: mukunku/tag-exists-action@v1.0.0
      id: nonexisting_tag
      with:
        tag: something
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Get checks
      run: echo "${{ steps.existing_tag.outputs.exists }} and ${{ steps.nonexisting_tag.outputs.exists }}"
    outputs:
      # latest_version: ${{ steps.latest.outputs.version }}
      current_version: ${{ steps.current.outputs.version }}

  # release:
  #   runs-on: ubuntu-latest
  #   needs: check-tags
  #   if: ${{ needs.check-tags.outputs.latest_version != needs.check-tags.outputs.current_version }}
  #   name: Create Release
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2
  #     - name: Create Release
  #       id: create_release
  #       uses: actions/create-release@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
  #       with:
  #         tag_name: ${{ github.ref }}
